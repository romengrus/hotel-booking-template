//- Input mixin (should be used as base for specific input mixins)
//- @param {string} *type Html input type parameter 'text' | 'number' | 'email' ...
//- @param {string} *id Html input id
//- @param {string} *name Html input name
//- @param {string} value Input value
//- @param {string} placeholder Input placeholder text
//- @param {boolean} isDisabled Is input disabled
//- @param {boolean} isRequired Is input required
//- @param {array} modifiers Modifier classes
mixin input(params = {})
  -
    params = deepmerge({
      type: '',
      id: '',
      name: '',
      value: '',
      placeholder: '',
      isDisabled: false,
      isRequired: false,
      modifiers: [],
    }, params)

    classList = ['input'].concat(params.modifiers)
    attributes = {}

    //- check required params
    if (!params.type) throw 'input mixin: type parameter is required'
    if (!params.id) throw 'input mixin: id parameter is required'
    if (!params.name) throw 'input mixin: name parameter is required'

    //- set appropriate classes
    if (params.isDisabled) classList.push(`input_is-disabled`)

    //- set appropriate attributes
    if (params.isRequired) attributes['required'] = true

  div(class= classList)
    input(
      type= params.type,
      id= params.id, 
      name= params.name, 
      value= params.value,
      placeholder= params.placeholder, 
      disabled= params.isDisabled)&attributes(attributes)

  