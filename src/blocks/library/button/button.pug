//- Button component
//- value       {string} Button text value
//- isRounded   {boolean} If true - button has rounded corners
//- isOutlined  {boolean} If true - button has border, but no background
//- isText      {boolean} If true - button has no border and background
//- isDisabled  {boolean} If true - button is disabled
//- isExpanded  {boolean} If true - button is expanded to the width of container
//- hasRipple   {boolean} If true - button has ripple effect on click
//- mods        {array} Modifier classes
//- icon        {object} Icon component
//--- name        {string} Icon name
//--- position    {'left' | 'right'} Icon position
mixin button(params)
  include /blocks/library/icon/icon.pug
  include /blocks/effects/ripple/ripple.pug

  -
    params = deepmerge({
      value: '',
      isRounded: true,
      isOutlined: false,
      isText: false,
      isDisabled: false,
      isExpanded: false,
      hasRipple: true,
      mods: [],
      icon: {
        name: '',
        position: 'right'
      },
    }, params)

    var classList = ['button'].concat(params.mods)

    if (params.isRounded) classList.push('button_is-rounded')
    if (params.isOutlined) classList.push('button_is-outlined')
    if (params.isText) classList.push('button_is-text')
    if (params.isDisabled) classList.push('button_is-disabled')
    if (params.isExpanded) classList.push('button_is-expanded')
    if (params.hasRipple && !params.isDisabled) classList.push('button_has-ripple')
    if (params.icon.name) classList.push('button_has-icon')

  a(class= classList)&attributes(attributes)= params.value
    if (params.icon.name)
      +icon({name: params.icon.name, modifiers: [`button__icon`, `button__icon_${params.icon.position}`]})

    if (params.hasRipple)
      +ripple

    block