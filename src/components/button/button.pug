//- Button
//-
//- type        oneOf ('button' | 'link') - Type of underlying dom element
//- href        string ('') - Href if type is 'link' 
//- size        oneOf ('small' | 'big') - Button size
//- icon        string ('') - icon to show inside button
//- isRounded   boolean (true) - button has rounded corners
//- isOutlined  boolean (false) - button has border, but no background
//- isDisabled  boolean (false) - button is disabled
//- isExpanded  boolean (false) - button is expanded to the width of container
//- isTextOnly  boolean (false) - button has no border and background
mixin button({type='button', href=dummyURL, size='', icon='', isRounded=true, isOutlined, isDisabled, isExpanded, isTextOnly} = {})
  include /components/icon/icon.pug

  -
    const classList = ['button'];
    if (size) classList.push(`button_is-${size}`);
    if (isRounded)  classList.push('button_is-rounded');
    if (isOutlined) classList.push('button_is-outlined');
    if (isDisabled) classList.push('button_is-disabled');
    if (isExpanded) classList.push('button_is-expanded');
    if (isTextOnly) classList.push('button_is-text-only');

  if (type === 'button')
    button(class = classList, disabled = isDisabled, data-button)&attributes(attributes)
      if block
        block
      if icon
        .button__icon
          +icon({ name: icon })
  else
    a(class = classList, href = href, data-button)&attributes(attributes)
      if block
        block
      if icon
        .button__icon
          +icon({ name: icon })
