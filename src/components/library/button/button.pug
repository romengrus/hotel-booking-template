//- Button component
//- value         {string} Button text value
//- isRounded     {boolean} If true - button has rounded corners
//- isOutlined    {boolean} If true - button has border, but no background
//- isText        {boolean} If true - button has no border and background
//- isDisabled    {boolean} If true - button is disabled
//- isExpanded    {boolean} If true - button is expanded to the width of container
//- hasRipple     {boolean} If true - button has ripple effect on click
//- mods          {array} Modifier classes
//- iconName      {string} Icon name
//- iconPosition  {'left' | 'right'} Icon position
mixin button(params = {})
  include /components/library/icon/icon.pug

  -
    params = Object.assign({
      value: '',
      isRounded: true,
      isOutlined: false,
      isText: false,
      isDisabled: false,
      isExpanded: false,
      hasRipple: false,
      mods: [],
      iconName: '',
      iconPosition: 'right'
    }, params)

    var classList = ['button'].concat(params.mods)

    if (params.isRounded) classList.push('button_is-rounded')
    if (params.isOutlined) classList.push('button_is-outlined')
    if (params.isText) classList.push('button_is-text')
    if (params.isDisabled) classList.push('button_is-disabled')
    if (params.isExpanded) classList.push('button_is-expanded')
    if (params.hasRipple && !params.isDisabled) classList.push('button_has-ripple')
    if (params.iconName) classList.push('button_has-icon')

  a(class= classList)&attributes(attributes)= params.value
    if (params.iconName)
      +icon({name: params.iconName, mods: [`button__icon`, `button__icon_${params.iconPosition}`]})

    block