//- Pagination 
//- ====================
//- Expected output (delta = 1, total = 1):
//- Selected page 1: ''
//- ====================
//- Expected output (delta = 1, total = 2):
//- Selected page 1: [(1), 2]
//- Selected page 2: [1, (2)]
//- ====================
//- Expected output (delta = 1, total = 3):
//- Selected page 1: [(1), 2, 3, ->]
//- Selected page 2: [<-, 1, (2), 3, ->]
//- Selected page 3: [<-, 1, 2, (3)]
//- ====================
//- Expected output (delta = 1, total = 4):
//- Selected page 1: [(1), 2, "...", 4, ->]
//- Selected page 2: [<-, 1, (2), 3, 4, ->]
//- Selected page 3: [<-, 1, 2, (3), 4, ->]
//- Selected page 4: [<-, 1, "...", 3, (4)]
//- ====================
//- Expected output (delta = 2, total = 20):
//- Selected page 1: [(1), 2, 3, "...", 20, ->]
//- Selected page 2: [<-, 1, (2), 3, 4, "...", 20, ->]
//- Selected page 3: [<-, 1, 2, (3), 4, 5, "...", 20, ->]
//- Selected page 4: [<-, 1, 2, 3, (4), 5, 6, "...", 20, ->]
//- Selected page 5: [<-, 1, 2, 3, 4, (5), 6, 7, "...", 20, ->]
//- Selected page 6: [<-, 1, "...", 4, 5, (6), 7, 8, "...", 20, ->]
//- Selected page 7: [<-, 1, "...", 5, 6, (7), 8, 9, "...", 20, ->]
//- Selected page 8: [<-, 1, "...", 6, 7, (8), 9, 10, "...", 20, ->]
//- Selected page 9: [<-, 1, "...", 7, 8, (9), 10, 11, "...", 20, ->]
//- Selected page 10: [<-, 1, "...", 8, 9, (10), 11, 12, "...", 20, ->]
//- Selected page 11: [<-, 1, "...", 9, 10, (11), 12, 13, "...", 20, ->]
//- Selected page 12: [<-, 1, "...", 10, 11, (12), 13, 14, "...", 20, ->]
//- Selected page 13: [<-, 1, "...", 11, 12, (13), 14, 15, "...", 20, ->]
//- Selected page 14: [<-, 1, "...", 12, 13, (14), 15, 16, "...", 20, ->]
//- Selected page 15: [<-, 1, "...", 13, 14, (15), 16, 17, "...", 20, ->]
//- Selected page 16: [<-, 1, "...", 14, 15, (16), 17, 18, 19, 20, ->]
//- Selected page 17: [<-, 1, "...", 15, 16, (17), 18, 19, 20, ->]
//- Selected page 18: [<-, 1, "...", 16, 17, (18), 19, 20, ->]
//- Selected page 19: [<-, 1, "...", 17, 18, (19), 20, ->]
//- Selected page 20: [<-, 1, "...", 18, 19, (20)]
//- ====================
//- 
//- current         number (1) - Current page number
//- perPage         number (10) - Items to show per page
//- total           number (0) - Total items in listing
//- delta           number (2) - Number of pages always visible from the left & right side of current page
mixin pagination({current = 1, perPage = 10, total = 0, delta = 2} = {})
  include /components/icon/icon.pug

  -
    const lastPage = Math.ceil(total / perPage)
    const idxFrom = 1
    const idxTo = 12
    const arrowMods = ['pagination__arrow']
    const pageMods = ['pagination__page']

    function approximately(n, to = 10) {
      const x = Math.floor(n / to) * to
      if (x < n) return `${x}+`
      return `${x}`   
    }

    function inScope(page, current, delta) {
      return (page >= current - delta) 
          && (page <= current + delta);
    }

    function atScopeBoundary(page, current, delta) {
      return (page === current - delta - 1) 
          || (page === current + delta + 1);
    }
  
  .pagination('data-pagination' = true)
    if (lastPage > 1)
      .pagination__listing
        //- prev arrow
        if (current > 1 && lastPage > 2)
          a(href = dummyURL, class = arrowMods.concat('pagination__prev'))
            +icon({ name: 'arrow-left-light' })

        //- main listing
        - for(let i = 1; i <= lastPage; i += 1)
          if (i === current)
            a(href = dummyURL, class = pageMods.concat('pagination__page-current'))= i
          else if (i === 1)
            a(href = dummyURL, class = pageMods.concat('pagination__page-first'))= i
          else if (i === lastPage)
            a(href = dummyURL, class = pageMods.concat('pagination__page-last'))= i
          else if (inScope(i, current, delta))
            a(href = dummyURL, class = pageMods.concat('pagination__page-delta'))= i
          else if (atScopeBoundary(i, current, delta))
            span(class= pageMods.concat('pagination__dots')) ...

        //- next arrow
        if (current < lastPage && lastPage > 2)
          a(href = dummyURL, class = arrowMods.concat('pagination__next'))
            +icon({ name: 'arrow-right-light' })
