//- Chart doughnut
//-
//- data    array ([]) - segments data 
//--- segment {
//---   value:  {number} numeric value to represent
//---   label:  {string} label to show in legend 
//---   bg:  {string} segment background color
//--- }
//-
//- Was build with the help of this article: 
//- https://medium.com/@heyoka/scratch-made-svg-donut-pie-charts-in-html5-2c587e935d72
mixin doughnut({data = []} = {})
  -
    var gap = 0.5;
    var circumference = 100;
    var radius = circumference / (2 * 3.14159265358);
    var cx = 18;
    var cy = 18;
    var strokeWidth = 1;
    var firstSegmentOffset = 25;
    var total = data.map(v => v.value).reduce((a, b) => a + b, 0);

    var chartStyle = '';
    chartStyle += `--doughnut-stroke-width: ${strokeWidth};`;

  figure.doughnut(data-doughnut, data-chart-data = data)
    .doughnut__display(style = chartStyle)
      svg(width = '100%', height = '100%', viewBox = `0 0 ${cx * 2} ${cy * 2}`)
        circle.doughnut__hole(
          cx= cx
          cy= cy
          r= radius
          fill='#fff')
        circle.doughnut__ring(
          cx= cx
          cy= cy
          r= radius
          fill='transparent' 
          stroke='#fff' 
          stroke-width= strokeWidth)

        - var prevSegmentsLength = 0
        each segment, index in data
          - var segmentLength = (segment.value / total) * circumference
          circle.doughnut__segment(
            id= `doughnut__segment-${index}` 
            data-doughnut-segment,
            data-segment-index= index,
            cx= cx
            cy= cy
            r= radius
            fill='transparent' 
            stroke= segment.bg
            stroke-width= strokeWidth
            stroke-dasharray= `${Math.max(segmentLength - gap, 0)} ${circumference - segmentLength + gap}`
            stroke-dashoffset=`${circumference - prevSegmentsLength + firstSegmentOffset - gap}`)
          - prevSegmentsLength += segmentLength

        g.doughnut__text
          text.doughnut__header(x='50%', y='50%', data-doughnut-header)= total
          text.doughnut__subheader(x='50%', y='50%', data-doughnut-subheader) голосов

    figcaption.doughnut__legend
      ul.doughnut__labels
        each segment, index in data
          - 
            var labelStyle = ''
            if (segment.bg) labelStyle += `--doughnut-segment-bg: ${segment.bg};`
          li.doughnut__label(
            id = `doughnut__label-${index}`, 
            data-doughnut-label,
            data-segment-index = index, 
            style = labelStyle)= segment.label