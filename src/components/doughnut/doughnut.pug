//- Chart doughnut
//-
//- data    {array} Array of objects: {
//---   value:  {number} numeric value to represent
//---   label:  {string} label to show in legend 
//---   bg:  {string} segment background color
//--- }
//- mods    {array} Modifier classes
//-
//- Was build with the help of this article: https://medium.com/@heyoka/scratch-made-svg-donut-pie-charts-in-html5-2c587e935d72
mixin doughnut(props = {})
  -
    props = Object.assign({
      data: [],
      mods: []
    }, props)

    attributes['data-chart-data'] = props.data

    var mods = ['chart', 'chart-doughnut'].concat(props.mods)
    var gap = 0.5
    var circumference = 100
    var radius = circumference / (2 * 3.14159265358)
    var cx = 18
    var cy = 18
    var strokeWidth = 2
    var firstSegmentOffset = 25
    var total = props.data.map(v => v.value).reduce((a, b) => a + b, 0)

    var chartStyle = ''
    chartStyle += `--chart-doughnut-stroke-width: ${strokeWidth};`

  figure(class= mods)&attributes(attributes)
    div(class= 'chart-doughnut__display', style= chartStyle)
      svg(width= '100%', height= '100%', viewBox= `0 0 ${cx * 2} ${cy * 2}`)
        circle(
          class="chart-doughnut__hole" 
          cx= cx
          cy= cy
          r= radius
          fill="#fff")
        circle(
          class="chart-doughnut__ring" 
          cx= cx
          cy= cy
          r= radius
          fill="transparent" 
          stroke="#fff" 
          stroke-width= strokeWidth)

        - var prevSegmentsLength = 0
        each segment, index in props.data
          - var segmentLength = (segment.value / total) * circumference
          circle(
            class= "chart-doughnut__segment" 
            id= `chart-doughnut__segment-${index}` 
            data-segment-index= index,
            cx= cx
            cy= cy
            r= radius
            fill="transparent" 
            stroke= segment.bg
            stroke-width= strokeWidth
            stroke-dasharray= `${Math.max(segmentLength - gap, 0)} ${circumference - segmentLength + gap}`
            stroke-dashoffset=`${circumference - prevSegmentsLength + firstSegmentOffset - gap}`)
          - prevSegmentsLength += segmentLength

        g.chart-doughnut__text
          text(x="50%" y="50%" class="chart-doughnut__header")= total
          text(x="50%" y="50%" class="chart-doughnut__subheader") голосов

    figcaption.chart-doughnut__legend
      ul.chart-doughnut__labels
        each segment, index in props.data
          - 
            var labelStyle = ''
            if (segment.bg) labelStyle += `--chart-doughnut-segment-bg: ${segment.bg};`
          li(
            class= 'chart-doughnut__label', 
            id= `chart-doughnut__label-${index}`, 
            data-segment-index= index, 
            style= labelStyle)= segment.label